#include <iostream>
#include <stdlib.h>
#include <stdio.h>

using namespace std;
struct BSTNode{
    int data;
    BSTNode *left, *right;
};

void printGivenLevel(BSTNode* root, int level, int ltr)
{
    if(root == NULL)
        return;
    if(level == 1)
        printf("%d ", root->data);
    else if (level > 1)
    {
        if(ltr)
        {
            printGivenLevel(root->left, level-1, ltr);
            printGivenLevel(root->right, level-1, ltr);
        }
        else
        {
            printGivenLevel(root->right, level-1, ltr);
            printGivenLevel(root->left, level-1, ltr);
        }
    }
}
 
int height(BSTNode* node)
{
    if (node==NULL)
        return 0;
    else
    {
      
        int lheight = height(node->left);
        int rheight = height(node->right);
        if (lheight > rheight)
            return(lheight+1);
        else return(rheight+1);
    }
}
void spiralOrderTraversal(BSTNode *root)
{
    // TODO:  Fill your code here
  int h = height(root);
    int i;
     bool ltr = true;
    for(i=1; i<=h; i++)
    {
        printGivenLevel(root, i, ltr);
        ltr = !ltr;
    }
}
